---

kind: Service
apiVersion: v1
metadata:
  name: snapcraft-io
spec:
  selector:
    app: snapcraft.io
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http

---

kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: snapcraft-io
spec:
  replicas: 9
  template:
    metadata:
      labels:
        app: snapcraft.io
    spec:
      containers:
        - name: snapcraft-io
          image: prod-comms.docker-registry.canonical.com/snapcraft.io:${TAG_TO_DEPLOY}
          ports:
            - name: http
              containerPort: 80
          envFrom:
            - configMapRef:
                name: proxy-config
                optional: true
            - configMapRef:
                name: global-config
            - configMapRef:
                name: snapcraft-io
                optional: true
            - secretRef:
                name: snapcraft-io-config
          env:
            - name: MAINTENANCE_MODE_STORE
              value: ${MAINTENANCE_MODE_STORE}
            - name: MAINTENANCE_MODE_PUBLISHER
              value: ${MAINTENANCE_MODE_PUBLISHER}
            - name: MAINTENANCE_MODE_BLOG
              value: ${MAINTENANCE_MODE_BLOG}
            - name: MAITENANCE_MODE_LOGIN
              value: ${MAINTENANCE_MODE_LOGIN}
          readinessProbe:
            httpGet:
              path: /_status/check
              port: 80
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            limits:
              memory: "512Mi"

---
